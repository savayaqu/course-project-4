{
	"info": {
		"_postman_id": "5d21f839-04c2-4915-8f2b-9dbb27882ebe",
		"name": "API test DON'T DELETE",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38992338",
		"_collection_link": "https://wepics.postman.co/workspace/PicSync~050ca731-5476-4ad5-a8a3-e7e2919d2489/collection/38992338-5d21f839-04c2-4915-8f2b-9dbb27882ebe?action=share&source=collection_link&creator=38992338"
	},
	"item": [
		{
			"name": "All Statuses",
			"item": [
				{
					"name": "401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Проверка кода ответа\", function () {\r",
									"    pm.response.to.have.status(401); \r",
									"});\r",
									"pm.test(\"Проверка времени ответа\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
									"});\r",
									"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{api}}/",
							"host": [
								"{{api}}"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Проверка кода ответа\", function () {\r",
									"    pm.response.to.have.status(400); \r",
									"});\r",
									"pm.test(\"Проверка времени ответа\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
									"});\r",
									"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenadmintest}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "login",
									"value": "admin",
									"description": "['requred', 'string']",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Admin123!",
									"description": "['requred', 'string']",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api}}/",
							"host": [
								"{{api}}"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "409",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Проверка кода ответа\", function () {\r",
									"    pm.response.to.have.status(409); \r",
									"});\r",
									"pm.test(\"Проверка времени ответа\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
									"});\r",
									"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenadmintest}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{api}}/",
							"host": [
								"{{api}}"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "204",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Проверка кода ответа\", function () {\r",
									"    pm.response.to.have.status(204); \r",
									"});\r",
									"pm.test(\"Проверка времени ответа\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenadmintest}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{api}}/",
							"host": [
								"{{api}}"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "201",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Проверка кода ответа\", function () {\r",
									"    pm.response.to.have.status(201); \r",
									"});\r",
									"pm.test(\"Проверка времени ответа\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
									"});\r",
									"pm.test(\"Проверка наличия ключа 'token'\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property(\"token\");\r",
									"});\r",
									"pm.test(\"Проверка наличия ключа 'name'\", function () {\r",
									"    pm.expect(pm.response.json().user).to.have.property(\"name\");\r",
									"});\r",
									"pm.environment.set('tokenlogout', pm.response.json().token)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenadmintest}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{$randomUserName}}",
									"description": "['requred', 'string', 'max:255', 'min:2']",
									"type": "text"
								},
								{
									"key": "login",
									"value": "{{$randomUserName}}",
									"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{$randomPassword}}",
									"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api}}/",
							"host": [
								"{{api}}"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "422",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Проверка кода ответа\", function () {\r",
									"    pm.response.to.have.status(422); \r",
									"});\r",
									"pm.test(\"Проверка времени ответа\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
									"});\r",
									"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
									"});\r",
									"pm.test(\"Проверка значений в errors\", function () {\r",
									"    pm.expect(pm.response.json().errors).to.have.property(\"login\");\r",
									"    pm.expect(pm.response.json().errors).to.have.property(\"password\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenadmintest}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{$randomUserName}}",
									"description": "['requred', 'string', 'max:255', 'min:2']",
									"type": "text",
									"disabled": true
								},
								{
									"key": "login",
									"value": "admin",
									"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
									"type": "text"
								},
								{
									"key": "password",
									"value": "1221",
									"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api}}/",
							"host": [
								"{{api}}"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Проверка кода ответа\", function () {\r",
									"    pm.response.to.have.status(200); \r",
									"});\r",
									"pm.test(\"Проверка времени ответа\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
									"});\r",
									"pm.test(\"Проверка наличия ключа 'token'\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property(\"token\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenadmintest}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "login",
									"value": "admin",
									"description": "['requred', 'string']",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Admin123!",
									"description": "['requred', 'string']",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api}}/",
							"host": [
								"{{api}}"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Проверка кода ответа\", function () {\r",
									"    pm.response.to.have.status(403); \r",
									"});\r",
									"pm.test(\"Проверка времени ответа\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
									"});\r",
									"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenusertest}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{api}}/",
							"host": [
								"{{api}}"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Проверка кода ответа\", function () {\r",
									"    pm.response.to.have.status(404); \r",
									"});\r",
									"pm.test(\"Проверка времени ответа\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
									"});\r",
									"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenadmintest}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{api}}/",
							"host": [
								"{{api}}"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Авторизация",
			"item": [
				{
					"name": "Регистрация",
					"item": [
						{
							"name": "201 Регистрация",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(201); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'token'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"token\");\r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'user'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"user\");\r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'name'\", function () {\r",
											"    pm.expect(pm.response.json().user).to.have.property(\"name\");\r",
											"});\r",
											"pm.environment.set('tokenlogout', pm.response.json().token)\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "{{$randomUserName}}",
											"description": "['requred', 'string', 'max:255', 'min:2']",
											"type": "text"
										},
										{
											"key": "login",
											"value": "{{$randomLoremWord}}",
											"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{$randomPassword}}",
											"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/register",
									"host": [
										"{{api}}"
									],
									"path": [
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "422 Регистрация",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(422); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"pm.test(\"проверка нельзя зарегать логин и пароль неа\", function () {\r",
											"    pm.expect(pm.response.json().errors).to.have.property(\"login\");\r",
											"    pm.expect(pm.response.json().errors).to.have.property(\"password\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "{{$randomUserName}}",
											"description": "['requred', 'string', 'max:255', 'min:2']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
											"type": "text"
										},
										{
											"key": "password",
											"value": "1221",
											"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/register",
									"host": [
										"{{api}}"
									],
									"path": [
										"register"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Авторизация",
					"item": [
						{
							"name": "200 пользователь",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(200); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'token'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"token\");\r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'user'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"user\");\r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'name'\", function () {\r",
											"    pm.expect(pm.response.json().user).to.have.property(\"name\");\r",
											"});\r",
											"pm.environment.set('tokenusertest', pm.response.json().token)\r",
											"pm.environment.set('idusertest', pm.response.json().user.id)\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login",
											"value": "Test2",
											"description": "['requred', 'string']",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Test123!",
											"description": "['requred', 'string']",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/login",
									"host": [
										"{{api}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "200 админ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(200); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'token'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"token\");\r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'user'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"user\");\r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'name'\", function () {\r",
											"    pm.expect(pm.response.json().user).to.have.property(\"name\");\r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'role' и значения admin\", function () {\r",
											"    pm.expect(pm.response.json().user).to.have.property(\"role\", \"admin\");\r",
											"});\r",
											"pm.environment.set('tokenadmintest', pm.response.json().token)\r",
											"pm.environment.set('idadmintest', pm.response.json().user.id)\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string']",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Admin123!",
											"description": "['requred', 'string']",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/login",
									"host": [
										"{{api}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "422 Авторизация",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(422); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"pm.test(\"проверка надо ввести данные\", function () {\r",
											"    pm.expect(pm.response.json().errors).to.have.property(\"login\");\r",
											"    pm.expect(pm.response.json().errors).to.have.property(\"password\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login",
											"value": "admin2222222222222222222222222222222222",
											"description": "['requred', 'string']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password",
											"value": "Admin123!2",
											"description": "['requred', 'string']",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{api}}/login",
									"host": [
										"{{api}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "401 Авторизация",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login",
											"value": "admin2222222222222222222222222222222222",
											"description": "['requred', 'string']",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{$randomPassword}}",
											"description": "['requred', 'string']",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/login",
									"host": [
										"{{api}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Выход",
					"item": [
						{
							"name": "401 Выход",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/logout",
									"host": [
										"{{api}}"
									],
									"path": [
										"logout"
									]
								}
							},
							"response": []
						},
						{
							"name": "204 выход",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(204); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenlogout}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/logout",
									"host": [
										"{{api}}"
									],
									"path": [
										"logout"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Альбомы",
			"item": [
				{
					"name": "Создание альбома",
					"item": [
						{
							"name": "201",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(201); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.environment.set('idalbumtest', pm.response.json().album.id)\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "крутой альбом",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums"
									]
								}
							},
							"response": []
						},
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "comment",
											"value": "Удаляй",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums"
									]
								}
							},
							"response": []
						},
						{
							"name": "422",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(422); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"pm.test(\"проверка наличия name в errors\", function () {\r",
											"    pm.expect(pm.response.json().errors).to.have.property(\"name\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "comment",
											"value": "Уд",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Список альбомов",
					"item": [
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums"
									]
								}
							},
							"response": []
						},
						{
							"name": "200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(200); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'own'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"own\");\r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'accessible'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"accessible\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string']",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Admin123!",
											"description": "['requred', 'string']",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Инфо об альбоме",
					"item": [
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(200); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'album'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"album\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string']",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Admin123!",
											"description": "['requred', 'string']",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(403); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenusertest}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(404); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api}}/albums/{{$randomBitcoin}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{$randomBitcoin}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Изменение альбома",
					"item": [
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "422",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(422); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"pm.test(\"Проверка значений в errors\", function () {\r",
											"    pm.expect(pm.response.json().errors).to.have.property(\"name\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "",
											"description": "['requred', 'string', 'max:255', 'min:2']",
											"type": "text"
										},
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password",
											"value": "1221",
											"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(200); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'album'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"album\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string']",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Admin123!",
											"description": "['requred', 'string']",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(403); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenusertest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(404); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{api}}/albums/{{$randomBitcoin}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{$randomBitcoin}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Удаление альбома",
					"item": [
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(403); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenusertest}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(404); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api}}/albums/{{$randomBitcoin}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{$randomBitcoin}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "204",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(204); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Доступы на альбом",
			"item": [
				{
					"name": "Приглашения",
					"item": [
						{
							"name": "Создание кода приглашения",
							"item": [
								{
									"name": "401",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(401); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/albums/{{idalbumtest}}/invite",
											"host": [
												"{{api}}"
											],
											"path": [
												"albums",
												"{{idalbumtest}}",
												"invite"
											]
										}
									},
									"response": []
								},
								{
									"name": "201",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(201); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'invitation'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"invitation\");\r",
													"});\r",
													"pm.environment.set('codeinvitationtest', pm.response.json().invitation.code)"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{api}}/albums/{{idalbumtest}}/invite",
											"host": [
												"{{api}}"
											],
											"path": [
												"albums",
												"{{idalbumtest}}",
												"invite"
											]
										}
									},
									"response": []
								},
								{
									"name": "422",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(422); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													"pm.test(\"Проверка значений в errors\", function () {\r",
													"    pm.expect(pm.response.json().errors).to.have.property(\"expires_at\");\r",
													"    pm.expect(pm.response.json().errors).to.have.property(\"timeLimit\");\r",
													"    pm.expect(pm.response.json().errors).to.have.property(\"joinLimit\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "expires_at",
													"value": "0",
													"description": "['requred', 'string', 'max:255', 'min:2']",
													"type": "text"
												},
												{
													"key": "timeLimit",
													"value": "0",
													"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
													"type": "text"
												},
												{
													"key": "joinLimit",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{api}}/albums/{{idalbumtest}}/invite",
											"host": [
												"{{api}}"
											],
											"path": [
												"albums",
												"{{idalbumtest}}",
												"invite"
											]
										}
									},
									"response": []
								},
								{
									"name": "403",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(403); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenusertest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/albums/{{idalbumtest}}/invite",
											"host": [
												"{{api}}"
											],
											"path": [
												"albums",
												"{{idalbumtest}}",
												"invite"
											]
										}
									},
									"response": []
								},
								{
									"name": "404",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(404); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{api}}/albums/{{$randomBitcoin}}/invite",
											"host": [
												"{{api}}"
											],
											"path": [
												"albums",
												"{{$randomBitcoin}}",
												"invite"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Удаление кода приглашения",
							"item": [
								{
									"name": "401",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(401); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/invitation/{{codeinvitationtest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"invitation",
												"{{codeinvitationtest}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "403",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(403); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenusertest}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/invitation/{{codeinvitationtest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"invitation",
												"{{codeinvitationtest}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "404",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(404); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{api}}/invitation/{{$randomBitcoin}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"invitation",
												"{{$randomBitcoin}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "204",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(204); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/invitation/{{codeinvitationtest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"invitation",
												"{{codeinvitationtest}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Вступление по приглашению (получение доступа)",
							"item": [
								{
									"name": "401",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(401); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/invitation/{{codeinvitationtest}}/join",
											"host": [
												"{{api}}"
											],
											"path": [
												"invitation",
												"{{codeinvitationtest}}",
												"join"
											]
										}
									},
									"response": []
								},
								{
									"name": "409",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(409); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/invitation/{{codeinvitationtest}}/join",
											"host": [
												"{{api}}"
											],
											"path": [
												"invitation",
												"{{codeinvitationtest}}",
												"join"
											]
										}
									},
									"response": []
								},
								{
									"name": "404",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(404); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{api}}/invitation/{{$randomBitcoin}}/join",
											"host": [
												"{{api}}"
											],
											"path": [
												"invitation",
												"{{$randomBitcoin}}",
												"join"
											]
										}
									},
									"response": []
								},
								{
									"name": "204",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(204); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenusertest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/invitation/{{codeinvitationtest}}/join",
											"host": [
												"{{api}}"
											],
											"path": [
												"invitation",
												"{{codeinvitationtest}}",
												"join"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Получение альбома в приглашении",
							"item": [
								{
									"name": "401",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(401); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/invitation/{{codeinvitationtest}}/album",
											"host": [
												"{{api}}"
											],
											"path": [
												"invitation",
												"{{codeinvitationtest}}",
												"album"
											]
										}
									},
									"response": []
								},
								{
									"name": "200",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(200); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'invitation'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"invitation\");\r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'album'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"album\");\r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'invite'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"invite\");\r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'pictures'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"pictures\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "name",
													"value": "{{$randomUserName}}",
													"description": "['requred', 'string', 'max:255', 'min:2']",
													"type": "text"
												},
												{
													"key": "login",
													"value": "{{$randomUserName}}",
													"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{$randomPassword}}",
													"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{api}}/invitation/{{codeinvitationtest}}/album",
											"host": [
												"{{api}}"
											],
											"path": [
												"invitation",
												"{{codeinvitationtest}}",
												"album"
											]
										}
									},
									"response": []
								},
								{
									"name": "404",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(404); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api}}/invitation/{{$randomBitcoin}}/album",
											"host": [
												"{{api}}"
											],
											"path": [
												"invitation",
												"{{$randomBitcoin}}",
												"album"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Список выданных доступов и приглашений",
					"item": [
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/accesses",
									"host": [
										"{{api}}"
									],
									"path": [
										"accesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(200); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'albums'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"albums\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string']",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Admin123!",
											"description": "['requred', 'string']",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/accesses",
									"host": [
										"{{api}}"
									],
									"path": [
										"accesses"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Отзыв доступа для пользователя",
					"item": [
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/accesses/{{idusertest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"accesses",
										"{{idusertest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(403); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenusertest}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/accesses/{{idusertest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"accesses",
										"{{idusertest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(404); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/accesses/{{$randomBitcoin}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"accesses",
										"{{$randomBitcoin}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "409",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(409); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/accesses/{{idadmintest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"accesses",
										"{{idadmintest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "204",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(204); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/accesses/{{idusertest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"accesses",
										"{{idusertest}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Картинки в альбоме",
			"item": [
				{
					"name": "Загрузка картинок в альбом",
					"item": [
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures"
									]
								}
							},
							"response": []
						},
						{
							"name": "200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(200); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'sign'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"sign\");\r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'successful'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\");\r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'errored'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errored\");\r",
											"});\r",
											"pm.environment.set('signtest', pm.response.json().sign)\r",
											"\r",
											"const successfulArray = pm.response.json().successful;\r",
											"if (successfulArray && successfulArray.length > 0) {\r",
											"    const firstSuccessfulId = successfulArray[0].id;\r",
											"    pm.environment.set('idpicturetest', firstSuccessfulId);\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "pictures[0][file]",
											"type": "file",
											"src": "postman-cloud:///1eeda5f0-f9c1-46a0-a6bc-f07610341fc1"
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures"
									]
								}
							},
							"response": []
						},
						{
							"name": "422",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(422); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"pm.test(\"Проверка значений в errors\", function () {\r",
											"    pm.expect(pm.response.json().errors).to.have.property(\"pictures\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "{{$randomUserName}}",
											"description": "['requred', 'string', 'max:255', 'min:2']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password",
											"value": "1221",
											"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures"
									]
								}
							},
							"response": []
						},
						{
							"name": "403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(403); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenusertest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures"
									]
								}
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(404); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{api}}/albums/{{$randomBitcoin}}/pictures",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{$randomBitcoin}}",
										"pictures"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Список картинок альбома",
					"item": [
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures?sort=date&reverse",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures"
									],
									"query": [
										{
											"key": "sort",
											"value": "date"
										},
										{
											"key": "reverse",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(200); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'sign'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"sign\");\r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'pictures'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"pictures\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string']",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Admin123!",
											"description": "['requred', 'string']",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures?sort=date&reverse",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures"
									],
									"query": [
										{
											"key": "sort",
											"value": "date"
										},
										{
											"key": "reverse",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(400); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string']",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Admin123!",
											"description": "['requred', 'string']",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures?sort=date2&reverse",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures"
									],
									"query": [
										{
											"key": "sort",
											"value": "date2"
										},
										{
											"key": "reverse",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(403); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenusertest}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures?sort=date&reverse",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures"
									],
									"query": [
										{
											"key": "sort",
											"value": "date"
										},
										{
											"key": "reverse",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(404); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api}}/albums/{{$randomBitcoin}}/pictures?sort=date&reverse",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{$randomBitcoin}}",
										"pictures"
									],
									"query": [
										{
											"key": "sort",
											"value": "date"
										},
										{
											"key": "reverse",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Картинка",
			"item": [
				{
					"name": "Информация о картинке",
					"item": [
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures",
										"{{idpicturetest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(200); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'sign'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"sign\");\r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'picture'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"picture\");\r",
											"});\r",
											"pm.environment.set('signtest', pm.response.json().sign)\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string']",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Admin123!",
											"description": "['requred', 'string']",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures",
										"{{idpicturetest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(403); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenusertest}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures",
										"{{idpicturetest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(404); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{$randomBitcoin}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures",
										"{{$randomBitcoin}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Отображение превью картинки",
					"item": [
						{
							"name": "403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(403); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}/thumb/{{orientation}}{{size}}?sign={{$randomBitcoin}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures",
										"{{idpicturetest}}",
										"thumb",
										"{{orientation}}{{size}}"
									],
									"query": [
										{
											"key": "sign",
											"value": "{{$randomBitcoin}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(200); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string']",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Admin123!",
											"description": "['requred', 'string']",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}/thumb/{{orientation}}{{size}}?sign={{signtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures",
										"{{idpicturetest}}",
										"thumb",
										"{{orientation}}{{size}}"
									],
									"query": [
										{
											"key": "sign",
											"value": "{{signtest}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(404); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{$randomBitcoin}}/thumb/{{orientation}}{{size}}?sign={{signtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures",
										"{{$randomBitcoin}}",
										"thumb",
										"{{orientation}}{{size}}"
									],
									"query": [
										{
											"key": "sign",
											"value": "{{signtest}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Отображение картинки (оригинал)",
					"item": [
						{
							"name": "403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(403); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}/original?sign={{$randomBitcoin}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures",
										"{{idpicturetest}}",
										"original"
									],
									"query": [
										{
											"key": "sign",
											"value": "{{$randomBitcoin}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(200); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string']",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Admin123!",
											"description": "['requred', 'string']",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}/original?sign={{signtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures",
										"{{idpicturetest}}",
										"original"
									],
									"query": [
										{
											"key": "sign",
											"value": "{{signtest}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(404); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api}}/albums/{{$randomBitcoin}}/pictures/{{idpicturetest}}/original?sign={{signtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{$randomBitcoin}}",
										"pictures",
										"{{idpicturetest}}",
										"original"
									],
									"query": [
										{
											"key": "sign",
											"value": "{{signtest}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Скачивание картинки",
					"item": [
						{
							"name": "403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(403); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}/download?sign={{$randomBitcoin}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures",
										"{{idpicturetest}}",
										"download"
									],
									"query": [
										{
											"key": "sign",
											"value": "{{$randomBitcoin}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(200); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string']",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Admin123!",
											"description": "['requred', 'string']",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}/download?sign={{signtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures",
										"{{idpicturetest}}",
										"download"
									],
									"query": [
										{
											"key": "sign",
											"value": "{{signtest}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(404); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}/download?sign={{signtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures",
										"{{idpicturetest}}",
										"download"
									],
									"query": [
										{
											"key": "sign",
											"value": "{{signtest}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Удаление картинки",
					"item": [
						{
							"name": "403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(403); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenusertest}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures",
										"{{idpicturetest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(404); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{$randomBitcoin}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures",
										"{{$randomBitcoin}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures",
										"{{idpicturetest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "204",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(204); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string']",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Admin123!",
											"description": "['requred', 'string']",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures",
										"{{idpicturetest}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Теги",
			"item": [
				{
					"name": "Создание тега",
					"item": [
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/tags",
									"host": [
										"{{api}}"
									],
									"path": [
										"tags"
									]
								}
							},
							"response": []
						},
						{
							"name": "422",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(422); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"pm.test(\"Проверка значений в errors\", function () {\r",
											"    pm.expect(pm.response.json().errors).to.have.property(\"value\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "{{$randomUserName}}",
											"description": "['requred', 'string', 'max:255', 'min:2']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password",
											"value": "1221",
											"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{api}}/tags",
									"host": [
										"{{api}}"
									],
									"path": [
										"tags"
									]
								}
							},
							"response": []
						},
						{
							"name": "201",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(201); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'tag'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"tag\");\r",
											"});\r",
											"pm.environment.set('idtagtest', pm.response.json().tag.id)\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "value",
											"value": "{{$randomLastName}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/tags",
									"host": [
										"{{api}}"
									],
									"path": [
										"tags"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Список личных тегов",
					"item": [
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/tags",
									"host": [
										"{{api}}"
									],
									"path": [
										"tags"
									]
								}
							},
							"response": []
						},
						{
							"name": "200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(200); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'tags'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"tags\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string']",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Admin123!",
											"description": "['requred', 'string']",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/tags",
									"host": [
										"{{api}}"
									],
									"path": [
										"tags"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Редактирование тега",
					"item": [
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/tags/{{idtagtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"tags",
										"{{idtagtest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "422",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(422); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"pm.test(\"Проверка значений в errors\", function () {\r",
											"    pm.expect(pm.response.json().errors).to.have.property(\"value\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "{{$randomUserName}}",
											"description": "['requred', 'string', 'max:255', 'min:2']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password",
											"value": "1221",
											"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "value",
											"value": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/tags/{{idtagtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"tags",
										"{{idtagtest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(200); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'tag'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"tag\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string']",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Admin123!",
											"description": "['requred', 'string']",
											"type": "text"
										},
										{
											"key": "value",
											"value": "{{$randomFileName}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/tags/{{idtagtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"tags",
										"{{idtagtest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(404); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{api}}/tags/{{$randomBitcoin}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"tags",
										"{{$randomBitcoin}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Просмотр информации о теге (прикреплённые картинки)",
					"item": [
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/tags/{{idtagtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"tags",
										"{{idtagtest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(200); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'tag'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"tag\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string']",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Admin123!",
											"description": "['requred', 'string']",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/tags/{{idtagtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"tags",
										"{{idtagtest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(404); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api}}/tags/{{$randomBitcoin}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"tags",
										"{{$randomBitcoin}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Удаление тега",
					"item": [
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/tags/{{idtagtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"tags",
										"{{idtagtest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(404); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api}}/tags/{{$randomBitcoin}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"tags",
										"{{$randomBitcoin}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "204",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(204); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string']",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Admin123!",
											"description": "['requred', 'string']",
											"type": "text"
										},
										{
											"key": "value",
											"value": "{{$randomFileName}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/tags/{{idtagtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"tags",
										"{{idtagtest}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "К картинке",
					"item": [
						{
							"name": "Добавление тега к картинке",
							"item": [
								{
									"name": "401",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(401); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}/tags/{{idtagtest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"albums",
												"{{idalbumtest}}",
												"pictures",
												"{{idpicturetest}}",
												"tags",
												"{{idtagtest}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "204",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(204); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login",
													"value": "admin",
													"description": "['requred', 'string']",
													"type": "text"
												},
												{
													"key": "password",
													"value": "Admin123!",
													"description": "['requred', 'string']",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}/tags/{{idtagtest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"albums",
												"{{idalbumtest}}",
												"pictures",
												"{{idpicturetest}}",
												"tags",
												"{{idtagtest}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "403",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(403); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenusertest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}/tags/{{idtagtest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"albums",
												"{{idalbumtest}}",
												"pictures",
												"{{idpicturetest}}",
												"tags",
												"{{idtagtest}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "404",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(404); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}/tags/{{$randomBitcoin}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"albums",
												"{{idalbumtest}}",
												"pictures",
												"{{idpicturetest}}",
												"tags",
												"{{$randomBitcoin}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Удаление тега с картинки",
							"item": [
								{
									"name": "403",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(403); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenusertest}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}/tags/{{idtagtest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"albums",
												"{{idalbumtest}}",
												"pictures",
												"{{idpicturetest}}",
												"tags",
												"{{idtagtest}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "404",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(404); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}/tags/{{$randomBitcoin}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"albums",
												"{{idalbumtest}}",
												"pictures",
												"{{idpicturetest}}",
												"tags",
												"{{$randomBitcoin}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "401",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(401); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}/tags/{{idtagtest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"albums",
												"{{idalbumtest}}",
												"pictures",
												"{{idpicturetest}}",
												"tags",
												"{{idtagtest}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "204",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(204); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login",
													"value": "admin",
													"description": "['requred', 'string']",
													"type": "text"
												},
												{
													"key": "password",
													"value": "Admin123!",
													"description": "['requred', 'string']",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}/tags/{{idtagtest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"albums",
												"{{idalbumtest}}",
												"pictures",
												"{{idpicturetest}}",
												"tags",
												"{{idtagtest}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Жалобы ДОДЕЛАТЬ",
			"item": [
				{
					"name": "Типы",
					"item": [
						{
							"name": "Список типов жалоб",
							"item": [
								{
									"name": "401",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(401); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/complaints/types",
											"host": [
												"{{api}}"
											],
											"path": [
												"complaints",
												"types"
											]
										}
									},
									"response": []
								},
								{
									"name": "200",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(200); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login",
													"value": "admin",
													"description": "['requred', 'string']",
													"type": "text"
												},
												{
													"key": "password",
													"value": "Admin123!",
													"description": "['requred', 'string']",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{api}}/complaints/types",
											"host": [
												"{{api}}"
											],
											"path": [
												"complaints",
												"types"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Создание типа жалобы",
							"item": [
								{
									"name": "401",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(401); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/complaints/types",
											"host": [
												"{{api}}"
											],
											"path": [
												"complaints",
												"types"
											]
										}
									},
									"response": []
								},
								{
									"name": "422",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(422); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													"pm.test(\"Проверка значений в errors\", function () {\r",
													"    pm.expect(pm.response.json().errors).to.have.property(\"name\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "name",
													"value": "",
													"description": "['requred', 'string', 'max:255', 'min:2']",
													"type": "text"
												},
												{
													"key": "login",
													"value": "admin",
													"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
													"type": "text",
													"disabled": true
												},
												{
													"key": "password",
													"value": "1221",
													"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{api}}/complaints/types",
											"host": [
												"{{api}}"
											],
											"path": [
												"complaints",
												"types"
											]
										}
									},
									"response": []
								},
								{
									"name": "201",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(201); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'name'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"name\");\r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'id'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"id\");\r",
													"});\r",
													"pm.environment.set('idtypetest', pm.response.json().id)\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "name",
													"value": "{{$randomUserName}}",
													"description": "['requred', 'string', 'max:255', 'min:2']",
													"type": "text"
												},
												{
													"key": "login",
													"value": "{{$randomUserName}}",
													"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
													"type": "text",
													"disabled": true
												},
												{
													"key": "password",
													"value": "{{$randomPassword}}",
													"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{api}}/complaints/types",
											"host": [
												"{{api}}"
											],
											"path": [
												"complaints",
												"types"
											]
										}
									},
									"response": []
								},
								{
									"name": "403",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(403); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenusertest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/complaints/types",
											"host": [
												"{{api}}"
											],
											"path": [
												"complaints",
												"types"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Редактирование типа жалобы",
							"item": [
								{
									"name": "401",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(401); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/complaints/types/{{idtypetest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"complaints",
												"types",
												"{{idtypetest}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "422",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(422); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													"pm.test(\"Проверка значений в errors\", function () {\r",
													"    pm.expect(pm.response.json().errors).to.have.property(\"name\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "name",
													"value": "",
													"description": "['requred', 'string', 'max:255', 'min:2']",
													"type": "text"
												},
												{
													"key": "login",
													"value": "admin",
													"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
													"type": "text",
													"disabled": true
												},
												{
													"key": "password",
													"value": "1221",
													"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{api}}/complaints/types/{{idtypetest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"complaints",
												"types",
												"{{idtypetest}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "200",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(200); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'name'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"name\");\r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'id'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"id\");\r",
													"});\r",
													"pm.environment.set('idtypetest', pm.response.json().id)\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "name",
													"value": "{{$randomUserName}}",
													"description": "['requred', 'string', 'max:255', 'min:2']",
													"type": "text"
												},
												{
													"key": "login",
													"value": "{{$randomUserName}}",
													"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
													"type": "text",
													"disabled": true
												},
												{
													"key": "password",
													"value": "{{$randomPassword}}",
													"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{api}}/complaints/types/{{idtypetest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"complaints",
												"types",
												"{{idtypetest}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "403",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(403); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenusertest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/complaints/types/{{idtypetest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"complaints",
												"types",
												"{{idtypetest}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "404",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(404); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{api}}/complaints/types/{{$randomBitcoin}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"complaints",
												"types",
												"{{$randomBitcoin}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Удаление типа жалоб",
							"item": [
								{
									"name": "401",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(401); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/complaints/types/{{idtypetest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"complaints",
												"types",
												"{{idtypetest}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "403",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(403); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenusertest}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/complaints/types/{{idtypetest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"complaints",
												"types",
												"{{idtypetest}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "404",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(404); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{api}}/complaints/types/{{$randomBitcoin}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"complaints",
												"types",
												"{{$randomBitcoin}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "204",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(204); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "name",
													"value": "{{$randomUserName}}",
													"description": "['requred', 'string', 'max:255', 'min:2']",
													"type": "text"
												},
												{
													"key": "login",
													"value": "{{$randomUserName}}",
													"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
													"type": "text",
													"disabled": true
												},
												{
													"key": "password",
													"value": "{{$randomPassword}}",
													"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{api}}/complaints/types/{{idtypetest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"complaints",
												"types",
												"{{idtypetest}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Создать жалобу (на альбом)",
					"item": [
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/complaint",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"complaint"
									]
								}
							},
							"response": []
						},
						{
							"name": "422",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(422); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"pm.test(\"Проверка значений в errors\", function () {\r",
											"    pm.expect(pm.response.json().errors).to.have.property(\"description\");\r",
											"    pm.expect(pm.response.json().errors).to.have.property(\"typeId\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "{{$randomUserName}}",
											"description": "['requred', 'string', 'max:255', 'min:2']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
											"type": "text"
										},
										{
											"key": "password",
											"value": "1221",
											"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/complaint",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"complaint"
									]
								}
							},
							"response": []
						},
						{
							"name": "409",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(409); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenusertest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "{{$randomUserName}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "login",
											"value": "{{$randomUserName}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password",
											"value": "{{$randomPassword}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "dfgdfg",
											"type": "text"
										},
										{
											"key": "typeId",
											"value": "{{idtypetest}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/complaint",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"complaint"
									]
								}
							},
							"response": []
						},
						{
							"name": "403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(403); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "description",
											"value": "sdfsdf",
											"type": "text"
										},
										{
											"key": "typeId",
											"value": "{{idtypetest}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/complaint",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"complaint"
									]
								}
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(404); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{api}}/albums/{{$randomBitcoin}}/complaint",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{$randomBitcoin}}",
										"complaint"
									]
								}
							},
							"response": []
						},
						{
							"name": "201",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(201); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'id'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"id\");\r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'status'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"status\");\r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'description'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"description\");\r",
											"});\r",
											"pm.environment.set('idcomplainttest', pm.response.json().id)\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenusertest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "{{$randomUserName}}",
											"description": "['requred', 'string', 'max:255', 'min:2']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "login",
											"value": "{{$randomUserName}}",
											"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password",
											"value": "{{$randomPassword}}",
											"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "dfgdfg",
											"type": "text"
										},
										{
											"key": "typeId",
											"value": "{{idtypetest}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/complaint",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"complaint"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Создать жалобу (на картинку)",
					"item": [
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}/complaint",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures",
										"{{idpicturetest}}",
										"complaint"
									]
								}
							},
							"response": []
						},
						{
							"name": "422",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(422); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"pm.test(\"Проверка значений в errors\", function () {\r",
											"    pm.expect(pm.response.json().errors).to.have.property(\"description\");\r",
											"    pm.expect(pm.response.json().errors).to.have.property(\"typeId\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "{{$randomUserName}}",
											"description": "['requred', 'string', 'max:255', 'min:2']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
											"type": "text"
										},
										{
											"key": "password",
											"value": "1221",
											"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}/complaint",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures",
										"{{idpicturetest}}",
										"complaint"
									]
								}
							},
							"response": []
						},
						{
							"name": "403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(403); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "description",
											"value": "sdfsdf",
											"type": "text"
										},
										{
											"key": "typeId",
											"value": "{{idtypetest}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}/complaint",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures",
										"{{idpicturetest}}",
										"complaint"
									]
								}
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(404); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{$randomBitcoin}}/complaint",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures",
										"{{$randomBitcoin}}",
										"complaint"
									]
								}
							},
							"response": []
						},
						{
							"name": "201",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(201); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'id'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"id\");\r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'status'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"status\");\r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'description'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"description\");\r",
											"});\r",
											"pm.environment.set('idcomplainttest', pm.response.json().id)\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenusertest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "{{$randomUserName}}",
											"description": "['requred', 'string', 'max:255', 'min:2']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "login",
											"value": "{{$randomUserName}}",
											"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password",
											"value": "{{$randomPassword}}",
											"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "dfgdfg",
											"type": "text"
										},
										{
											"key": "typeId",
											"value": "{{idtypetest}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}/complaint",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures",
										"{{idpicturetest}}",
										"complaint"
									]
								}
							},
							"response": []
						},
						{
							"name": "409",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(409); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenusertest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "{{$randomUserName}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "login",
											"value": "{{$randomUserName}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password",
											"value": "{{$randomPassword}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "dfgdfg",
											"type": "text"
										},
										{
											"key": "typeId",
											"value": "{{idtypetest}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/albums/{{idalbumtest}}/pictures/{{idpicturetest}}/complaint",
									"host": [
										"{{api}}"
									],
									"path": [
										"albums",
										"{{idalbumtest}}",
										"pictures",
										"{{idpicturetest}}",
										"complaint"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Список жалоб",
					"item": [
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/complaints?status=null&limit_per_album=5",
									"host": [
										"{{api}}"
									],
									"path": [
										"complaints"
									],
									"query": [
										{
											"key": "status",
											"value": "null"
										},
										{
											"key": "limit_per_album",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(200); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'albums'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"albums\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "description",
											"value": "sdfsdf",
											"type": "text"
										},
										{
											"key": "typeId",
											"value": "{{idtypetest}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/complaints?status=null&limit_per_album=5",
									"host": [
										"{{api}}"
									],
									"path": [
										"complaints"
									],
									"query": [
										{
											"key": "status",
											"value": "null"
										},
										{
											"key": "limit_per_album",
											"value": "5"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Редактирование статуса жалобы",
					"item": [
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/complaints/{{idcomplainttest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"complaints",
										"{{idcomplainttest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "422",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(422); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"pm.test(\"Проверка значений в errors\", function () {\r",
											"    pm.expect(pm.response.json().errors).to.have.property(\"status\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "{{$randomUserName}}",
											"description": "['requred', 'string', 'max:255', 'min:2']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "login",
											"value": "admin",
											"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password",
											"value": "1221",
											"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "status",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{api}}/complaints/{{idcomplainttest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"complaints",
										"{{idcomplainttest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(403); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenusertest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "description",
											"value": "sdfsdf",
											"type": "text"
										},
										{
											"key": "typeId",
											"value": "{{idtypetest}}",
											"type": "text"
										},
										{
											"key": "status",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/complaints/{{idcomplainttest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"complaints",
										"{{idcomplainttest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(404); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "status",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/complaints/{{$randomBitcoin}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"complaints",
										"{{$randomBitcoin}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(200); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'complaints'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"complaints\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "{{$randomUserName}}",
											"description": "['requred', 'string', 'max:255', 'min:2']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "login",
											"value": "{{$randomUserName}}",
											"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password",
											"value": "{{$randomPassword}}",
											"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "dfgdfg",
											"type": "text",
											"disabled": true
										},
										{
											"key": "typeId",
											"value": "{{idtypetest}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "status",
											"value": "0",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/complaints/{{idcomplainttest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"complaints",
										"{{idcomplainttest}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Отменить жалобу (свою)",
					"item": [
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/complaints/{{idcomplainttest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"complaints",
										"{{idcomplainttest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(403); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "description",
											"value": "sdfsdf",
											"type": "text"
										},
										{
											"key": "typeId",
											"value": "{{idtypetest}}",
											"type": "text"
										},
										{
											"key": "status",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/complaints/{{idcomplainttest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"complaints",
										"{{idcomplainttest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(404); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "status",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/complaints/{{$randomBitcoin}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"complaints",
										"{{$randomBitcoin}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "204",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(204); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenusertest}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "{{$randomUserName}}",
											"description": "['requred', 'string', 'max:255', 'min:2']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "login",
											"value": "{{$randomUserName}}",
											"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password",
											"value": "{{$randomPassword}}",
											"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "dfgdfg",
											"type": "text",
											"disabled": true
										},
										{
											"key": "typeId",
											"value": "{{idtypetest}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "status",
											"value": "0",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/complaints/{{idcomplainttest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"complaints",
										"{{idcomplainttest}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Предупреждения",
			"item": [
				{
					"name": "Создание предупреждения",
					"item": [
						{
							"name": "201",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(201); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.environment.set('idwarningtest', pm.response.json().warning.id)\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "comment",
											"value": "Удаляй",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/users/{{idusertest}}/warnings",
									"host": [
										"{{api}}"
									],
									"path": [
										"users",
										"{{idusertest}}",
										"warnings"
									]
								}
							},
							"response": []
						},
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "comment",
											"value": "Удаляй",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/users/{{idusertest}}/warnings",
									"host": [
										"{{api}}"
									],
									"path": [
										"users",
										"{{idusertest}}",
										"warnings"
									]
								}
							},
							"response": []
						},
						{
							"name": "403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(403); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenusertest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "comment",
											"value": "Удаляй",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/users/{{idusertest}}/warnings",
									"host": [
										"{{api}}"
									],
									"path": [
										"users",
										"{{idusertest}}",
										"warnings"
									]
								}
							},
							"response": []
						},
						{
							"name": "422",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(422); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"pm.test(\"проверка наличия comment в errors\", function () {\r",
											"    pm.expect(pm.response.json().errors).to.have.property(\"comment\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "comment",
											"value": "Уд",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{api}}/users/{{idusertest}}/warnings",
									"host": [
										"{{api}}"
									],
									"path": [
										"users",
										"{{idusertest}}",
										"warnings"
									]
								}
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(404); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "comment",
											"value": "Удаляй",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/users/{{$randomBitcoin}}/warnings",
									"host": [
										"{{api}}"
									],
									"path": [
										"users",
										"{{$randomBitcoin}}",
										"warnings"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Удаление предупреждения",
					"item": [
						{
							"name": "401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(401); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "comment",
											"value": "Удаляй",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/users/{{idusertest}}/warnings/{{idwarningtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"users",
										"{{idusertest}}",
										"warnings",
										"{{idwarningtest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(403); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenusertest}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "comment",
											"value": "Удаляй",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/users/{{idusertest}}/warnings/{{idwarningtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"users",
										"{{idusertest}}",
										"warnings",
										"{{idwarningtest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(404); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "comment",
											"value": "Удаляй",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/users/{{$randomBitcoin}}/warnings/{{idwarningtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"users",
										"{{$randomBitcoin}}",
										"warnings",
										"{{idwarningtest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "204",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(204); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenadmintest}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "comment",
											"value": "Удаляй",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api}}/users/{{idusertest}}/warnings/{{idwarningtest}}",
									"host": [
										"{{api}}"
									],
									"path": [
										"users",
										"{{idusertest}}",
										"warnings",
										"{{idwarningtest}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Пользователи",
			"item": [
				{
					"name": "Себя",
					"item": [
						{
							"name": "Получение себя",
							"item": [
								{
									"name": "401",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(401); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/users/me",
											"host": [
												"{{api}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"response": []
								},
								{
									"name": "200",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(200); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'user'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"user\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login",
													"value": "admin",
													"description": "['requred', 'string']",
													"type": "text"
												},
												{
													"key": "password",
													"value": "Admin123!",
													"description": "['requred', 'string']",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{api}}/users/me",
											"host": [
												"{{api}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Редактирование себя",
							"item": [
								{
									"name": "401",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(401); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/users/me",
											"host": [
												"{{api}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"response": []
								},
								{
									"name": "422",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(422); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													"pm.test(\"Проверка значений в errors\", function () {\r",
													"    pm.expect(pm.response.json().errors).to.have.property(\"name\");\r",
													"    pm.expect(pm.response.json().errors).to.have.property(\"password\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "name",
													"value": "1",
													"description": "['requred', 'string', 'max:255', 'min:2']",
													"type": "text"
												},
												{
													"key": "password",
													"value": "12",
													"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{api}}/users/me",
											"host": [
												"{{api}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"response": []
								},
								{
									"name": "200",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(200); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'user'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"user\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login",
													"value": "admin",
													"description": "['requred', 'string']",
													"type": "text",
													"disabled": true
												},
												{
													"key": "password",
													"value": "Admin123!",
													"description": "['requred', 'string']",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{api}}/users/me",
											"host": [
												"{{api}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Общие",
					"item": [
						{
							"name": "Список пользователей",
							"item": [
								{
									"name": "401",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(401); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/users",
											"host": [
												"{{api}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "200",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(200); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'users'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"users\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login",
													"value": "admin",
													"description": "['requred', 'string']",
													"type": "text"
												},
												{
													"key": "password",
													"value": "Admin123!",
													"description": "['requred', 'string']",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{api}}/users",
											"host": [
												"{{api}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "403",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(403); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenusertest}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/users",
											"host": [
												"{{api}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Получение пользователя",
							"item": [
								{
									"name": "401",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(401); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/users/{{idusertest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"users",
												"{{idusertest}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "200",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(200); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'user'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"user\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login",
													"value": "admin",
													"description": "['requred', 'string']",
													"type": "text"
												},
												{
													"key": "password",
													"value": "Admin123!",
													"description": "['requred', 'string']",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{api}}/users/{{idusertest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"users",
												"{{idusertest}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "403",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(403); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenusertest}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/users/{{idusertest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"users",
												"{{idusertest}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "404",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(404); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api}}/users/{{$randomBitcoin}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"users",
												"{{$randomBitcoin}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Редактирование пользователя",
							"item": [
								{
									"name": "401",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(401); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/users/{{idusertest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"users",
												"{{idusertest}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "422",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(422); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													"pm.test(\"Проверка значений в errors\", function () {\r",
													"    pm.expect(pm.response.json().errors).to.have.property(\"role_id\");\r",
													"    pm.expect(pm.response.json().errors).to.have.property(\"is_banned\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "name",
													"value": "1",
													"description": "['requred', 'string', 'max:255', 'min:2']",
													"type": "text",
													"disabled": true
												},
												{
													"key": "login",
													"value": "a",
													"description": "['requred', 'string', 'max:64', 'min:2', 'regex:/^[a-zA-Z0-9_-]+$/', 'unique:users']",
													"type": "text",
													"disabled": true
												},
												{
													"key": "role_id",
													"value": "sdfsdfs",
													"description": "['requred', 'string', 'max:255', 'min:8', \n'regex:/[a-z]/',\n'regex:/[A-Z]/',\n'regex:/[0-9]/',\n'regex:/[@$!%*#?&.,<>_-]/']",
													"type": "text"
												},
												{
													"key": "is_banned",
													"value": "ты разбанен",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{api}}/users/{{idusertest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"users",
												"{{idusertest}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "200",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(200); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'user'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"user\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "login",
													"value": "admin",
													"description": "['requred', 'string']",
													"type": "text"
												},
												{
													"key": "password",
													"value": "Admin123!",
													"description": "['requred', 'string']",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{api}}/users/{{idusertest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"users",
												"{{idusertest}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "403",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(403); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenusertest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/users/{{idusertest}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"users",
												"{{idusertest}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "404",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(404); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{api}}/users/{{$randomBitcoin}}",
											"host": [
												"{{api}}"
											],
											"path": [
												"users",
												"{{$randomBitcoin}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Настройки",
			"item": [
				{
					"name": "Публичные",
					"item": [
						{
							"name": "200 Настройки",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка кода ответа\", function () {\r",
											"    pm.response.to.have.status(200); \r",
											"});\r",
											"pm.test(\"Проверка времени ответа\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
											"});\r",
											"pm.test(\"Проверка наличия ключа 'settings'\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"settings\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api}}/",
									"host": [
										"{{api}}"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Приватные",
					"item": [
						{
							"name": "Просмотр",
							"item": [
								{
									"name": "200 Настройки",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(200); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'settings'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"settings\");\r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'space'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"space\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/settings",
											"host": [
												"{{api}}"
											],
											"path": [
												"settings"
											]
										}
									},
									"response": []
								},
								{
									"name": "401 Настройки",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(401); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/settings",
											"host": [
												"{{api}}"
											],
											"path": [
												"settings"
											]
										}
									},
									"response": []
								},
								{
									"name": "403 Настройки",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(403); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenusertest}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{api}}/settings",
											"host": [
												"{{api}}"
											],
											"path": [
												"settings"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Редактирование",
							"item": [
								{
									"name": "422 Настройки",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(422); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													"pm.test(\"Проверка на поля key, value\", function () {\r",
													"    pm.expect(pm.response.json().errors).to.have.property(\"key\");\r",
													"    pm.expect(pm.response.json().errors).to.have.property(\"value\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "value",
													"value": "100000",
													"type": "text",
													"disabled": true
												},
												{
													"key": "type",
													"value": "storage_size",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{api}}/settings",
											"host": [
												"{{api}}"
											],
											"path": [
												"settings"
											]
										}
									},
									"response": []
								},
								{
									"name": "200 Настройки",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(200); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenadmintest}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "value",
													"value": "95",
													"type": "text"
												},
												{
													"key": "key",
													"value": "upload_disable_percentage",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{api}}/settings",
											"host": [
												"{{api}}"
											],
											"path": [
												"settings"
											]
										}
									},
									"response": []
								},
								{
									"name": "401 Настройки",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка кода ответа\", function () {\r",
													"    pm.response.to.have.status(401); \r",
													"});\r",
													"pm.test(\"Проверка времени ответа\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(500); \r",
													"});\r",
													"pm.test(\"Проверка наличия ключа 'message'\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "value",
													"value": "100000",
													"type": "text",
													"disabled": true
												},
												{
													"key": "type",
													"value": "storage_size",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{api}}/settings",
											"host": [
												"{{api}}"
											],
											"path": [
												"settings"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		}
	]
}