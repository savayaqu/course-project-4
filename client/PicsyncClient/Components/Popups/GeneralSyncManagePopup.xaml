<?xml version="1.0" encoding="utf-8" ?>
<tk:Popup xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
          xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
          xmlns:tk="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
          xmlns:vm="clr-namespace:PicsyncClient.ViewModels"
          xmlns:cv="clr-namespace:PicsyncClient.Converters"
          x:Class="PicsyncClient.Components.Popups.GeneralSyncManagePopup"
          Color="Transparent">
    <tk:Popup.Resources>
        <ResourceDictionary>
            <tk:IsNotNullConverter     x:Key="IsNotNullConverter"/>
            <tk:IsNullConverter        x:Key="IsNullConverter"/>
            <tk:InvertedBoolConverter  x:Key="InvertedBoolConverter"/>
            <cv:TimeSpanConverter      x:Key="TimeSpanConverter"/>
            <cv:BytesToHumanConverter  x:Key="BytesToHumanConverter"/>
            <cv:ToPercentConverter     x:Key="ToPercentConverter"/>
        </ResourceDictionary>
    </tk:Popup.Resources>
    <Grid>
        <Frame Margin="10" BackgroundColor="{AppThemeBinding Light=White, Dark={StaticResource OffBlack}}" BorderColor="Transparent">
            <Grid MaximumWidthRequest="350" RowDefinitions="auto,*,auto">
                <Grid ColumnDefinitions="*,auto">
                    <StackLayout>
                        <Label Text="Синхронизация" FontSize="18" VerticalOptions="Center"/>
                        <Label Text="На фоне идёт синхронизация" FontSize="12" TextColor="Gray" IsVisible="{Binding Sender.IsUploading}"/>
                    </StackLayout>
                    <Button Grid.Column="1" HeightRequest="40" WidthRequest="40" ImageSource="x.png"
                            Padding="8" VerticalOptions="Start" Command="{Binding CloseCommand}"/>
                </Grid>

                <CollectionView Grid.Row="1" IsGrouped="True" ItemsSource="{Binding UploadsGroups}">
                    <CollectionView.Header>
                        <BoxView BackgroundColor="Transparent" HeightRequest="5"/>
                    </CollectionView.Header>
                    <CollectionView.Footer>
                        <BoxView BackgroundColor="Transparent" HeightRequest="5"/>
                    </CollectionView.Footer>
                    <CollectionView.ItemsLayout>
                        <LinearItemsLayout Orientation="Vertical" ItemSpacing="2"/>
                    </CollectionView.ItemsLayout>
                    <CollectionView.GroupHeaderTemplate>
                        <DataTemplate>
                            <Grid ColumnDefinitions="*,5,auto">
                                <Label Text="{Binding Key.Album.Name}"/>
                                <Label Grid.Column="2">
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span Text="{Binding Key.UploadedCount}" FontSize="16" FontAttributes="Bold"/>
                                            <Span Text="/"/>
                                            <Span Text="{Binding Key.TotalCount}"/>
                                            <Span Text=" (" TextColor="Gray"/>
                                            <Span Text="{Binding Key.TotalBytes, Converter={StaticResource BytesToHumanConverter}}" TextColor="Gray"/>
                                            <Span Text=")" TextColor="Gray"/>
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>
                            </Grid>
                        </DataTemplate>
                    </CollectionView.GroupHeaderTemplate>
                    <CollectionView.ItemTemplate>
                        <DataTemplate>
                            <Frame Padding="10">
                                <StackLayout>
                                    <Grid ColumnDefinitions="*,5,auto">
                                        <Label Text="{Binding Item.Name}" LineBreakMode="MiddleTruncation" />
                                        <Label Text="{Binding Progress, Converter={StaticResource ToPercentConverter}}" Grid.Column="2"/>
                                    </Grid>
                                    <ProgressBar Progress="{Binding Progress}"/>
                                    <Grid ColumnDefinitions="*,*,*">
                                        <Label Text="{Binding StartedAt, StringFormat='{0:hh:mm:ss}'}"/>
                                        <Label Text="{Binding Item.Size, Converter={StaticResource BytesToHumanConverter}}" Grid.Column="1" HorizontalOptions="Center"/>
                                        <Label Text="{Binding TimeSpent, Converter={StaticResource TimeSpanConverter    }}" Grid.Column="2" HorizontalOptions="End"
                                               IsVisible="{Binding TimeSpent, Converter={StaticResource IsNotNullConverter}}"/>
                                    </Grid>
                                    <Label Text="{Binding Error}" TextColor="Red" IsVisible="{Binding Error, Converter={StaticResource IsNotNullConverter}}"/>
                                </StackLayout>
                            </Frame>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>

                <StackLayout Grid.Row="2" Spacing="5">
                    <StackLayout Spacing="5" IsVisible="{Binding ManageIsVisible}">
                        <Grid ColumnDefinitions="auto,*,auto">
                            <Label>
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="{Binding Sender.UploadedCount}" FontSize="16" FontAttributes="Bold"/>
                                        <Span Text="/"/>
                                        <Span Text="{Binding Sender.TotalCount}"/>
                                        <Span Text=" (" TextColor="Gray"/>
                                        <Span Text="{Binding Sender.UploadedBytes, Converter={StaticResource BytesToHumanConverter}}" TextColor="Gray"/>
                                        <Span Text="/" TextColor="Gray"/>
                                        <Span Text="{Binding Sender.TotalBytes, Converter={StaticResource BytesToHumanConverter}}" TextColor="Gray"/>
                                        <Span Text=")" TextColor="Gray"/>
                                    </FormattedString>
                                </Label.FormattedText>
                            </Label>
                            <Label Grid.Column="2" Text="{Binding Sender.Progress, Converter={StaticResource ToPercentConverter}}"/>
                        </Grid>
                        <ProgressBar Progress="{Binding Sender.Progress}"/>
                        <Label Grid.Column="2" HorizontalOptions="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="осталось: " TextColor="Gray"/>
                                    <Span Text="{Binding Sender.ETA, Converter={StaticResource TimeSpanConverter}}"/>
                                    <Span Text=" ("/>
                                    <Span Text="{Binding Sender.AverageSpeed, Converter={StaticResource BytesToHumanConverter}}"/>
                                    <Span Text="/c)"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Button Text="Очистить" Command="{Binding StopOrCancelUploadCommand}">
                            <Button.Triggers>
                                <DataTrigger TargetType="Button" Binding="{Binding Sender.IsUploading}" Value="True">
                                    <Setter Property="Text" Value="Остановить"/>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Red}"/>
                                </DataTrigger>
                            </Button.Triggers>
                        </Button>
                    </StackLayout>

                    <StackLayout IsVisible="{Binding IsUploading, Converter={StaticResource InvertedBoolConverter}}" Spacing="5">
                        <Button Text="Начать ручное" Command="{Binding StartManualSyncCommand}"/>
                    </StackLayout>
                </StackLayout>
            </Grid>
        </Frame>
    </Grid>
</tk:Popup>
